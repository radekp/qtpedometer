This is a GPS based pedometer, written for QTMoko but should work on
any QTExtended platform.

It compiles and will show basic position and speed data for the GPS.
Also have simplistic trip data, like ave speed, trip time and trip
distance

It turns out that the simplistic way of calculating distance travelled
is way inaccurate.  One suggestion I read is to take the speed
returned from the GPS, and use that to calculate the distabce
travelled for each sample. Sounds non-intuitive, but I'll give it a
try.

Looks like it is much more accurate, and means I don't have to mess
with math to smooth out the points.
However we need to set a threshold speed above which the trip distance is recorded.
Tried setting a threshold but that seems to make it more inaccurate...


Set a way point, then show straight line 2D or 3D distance from that
point to the current postion

turns off sleep mode while running.


for debugging when you run from the command line you can add an argument...

> qtpedometer gpsd [host:port]

to use gpsd at the given host and port, the default is to use localhost

also

> qtpedometer sim [filepath]

will run in simulation mode reading the NMEA data from the given file path.

In the menu check metric then speed is in meters per sec and distance
is in meters (or Km) otherwise if not checked distabce is in miles or
feet, and speed in Miles per Hour. This setting is saved. Default is
not metric.

Added a compass screen, this shows where north is based on the
freerunner pointing in the direction of motion, the compass needle is
red for north and green for south, you need to be moving for it to be
accurate.  There is also a blue arrow when a waypoint is set, this
shows the direction from north the waypoint is, if you are moving and
follow the blue arrow you may eventually reach the waypoint. This is
useful for finding your car :)

TODO
====

Make trip data file configurable (currently hard coded to /media/card/trip.txt)

Have an indication in compass window of whether it is accurate or not.

Store waypoint so you can suspend, then restore and find your car.